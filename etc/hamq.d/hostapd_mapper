#!/usr/bin/awk -f 
# 
#

### quicky for flora, only works with lowercase hex string
function hex2dec(hex){
dec=0
for (i=1;i<=length(hex);i++){
     digit=index("123456789abcdef",substr(hex,i,1));
     dec=dec*16+digit
     }
return dec
}


BEGIN { 
      FS = "/| " #split topic on / and _space_ for msg

	# mapping table for mac address to logical device name
    # should read this from a config file
    mactolog["00:b2:0e:20:21:9e"]="tablet"
    mactolog["90:68:c3:7a:c1:28"]="xt1022"
    mactolog["e0:ce:c3:66:55:32"]="tv"
	mactolog["18:a9:05:da:51:fc"]="omv"
    mactolog["00:22:61:b3:bb:e2"]="radio"
	mactolog["74:5e:1c:22:26:86"]="speaker"
	mactolog["b4:43:0d:af:bd:0d"]="prise"
	mactolog["b4:43:0d:70:76:96"]="eairsensor"
	mactolog["00:00:85:5F:0B:A6"]="printer"
	mactolog["6c:ad:f8:9f:55:de"]="chromecast"
	mactolog["00:09:ff:c9:df:21"]="wileyfox"
	mactolog["68:ab:ac:bc:8c:7c"]="irulu"
	mactolog["00:22:ec:00:64:63"]="VENUS"
    mactolog["c8:f7:33:2e:ce:08"]="addestino2"
	mactolog["C4:7C:8D:62:B1:0D"]="flora"
	#  
	hostapd_tracker_cmds["AP-STA-CONNECTED"]=1
	hostapd_tracker_cmds["AP-STA-DISCONNECTED"]=1
	#
	#
}

#handle miflora_poll
$1=="miflora_poll" {
#
# expected format
# flora_poll/MAC Characteristic value/descriptor: bf 00 00 72 02  00  00  03  00  00  02  3c  00  fb  34  9b
# $1         $2  $3             $4    $5          $6 $7 $8 $9 $10 $11 $12 $13 $14 $15 $16 $17 $18 $19 $20 $21
#                                                 [temp]  [light        ][ M][fertile]

 mac=$2
 temp=hex2dec($7$6)/10
 light=hex2dec($12$11$10$9)
 moist=hex2dec($13)
 fert=hex2dec($15$14)
 
 logical=mactolog[mac] 
 if (!logical){
	logical="UKNOWN"
	mactolog[mac]=logical
 }

 system("mosquitto_pub -t " logical "/temperature -m " temp)
 system("mosquitto_pub -t " logical "/light -m " light)
 system("mosquitto_pub -t " logical "/moisture -m " moist)
 system("mosquitto_pub -t " logical "/fertility -m " fert)
 
}



#handle hostapd_tracker events
$1=="hostapd_tracker" && ($5 in hostapd_tracker_cmds){ 
#
# expected format
# hostapd_tracker/device/iface/mac AP-STA-CONNECTED
# hostapd_tracker/device/iface/mac AP-STA-DISCONNECTED
#
 device = $2
 iface = $3
 deviceiface = $2$3
 mac = $4
 cmd = $5
#
 
# store event per device_interface combo (assumed to be unique)
# multiple instances device/iface combos can report the same mac
# store events separately and OR them to avoid a race condition
 if (cmd=="AP-STA-CONNECTED"){
   state[mac,deviceiface]=1 #TRUE
 }
 if (cmd=="AP-STA-DISCONNECTED"){
   state[mac,deviceiface]="" #FALSE
 }

# iterate over all interfaces for a given mac
# OR all device_interface states
# mentalnote: doublecheck how AWK OR's
 macstate="" #FALSE
 for (key in state){
   split( key, i, SUBSEP )
   if (i[1]==mac){ 
     macstate=macstate || state[mac,i[2]]
   }
 }

#map mac to logical
 logical=mactolog[mac] 
 if (!logical){
	logical="UKNOWN"
	mactolog[mac]=logical
 }

# update the power state for the logical device
# we are using connected as a proxy for powered
# !we are not handling anything but connect/disc sofar so this should be safe
 if (macstate) { system("mosquitto_pub -t " logical "/power -m ON") }
 else {	system("mosquitto_pub -t " logical "/power -m OFF") }

} ## end of hostapd_tracker


##################################################
# tv
# tv/power ON -> send wakeonlan to omv(requires etherwake)
# tv/power OFF
##################################################
$1=="tv" && $2=="power"{
  if ($3=="ON") {
	system("etherwake -b -i br-lan 18:a9:05:da:51:fc")
  }
} ## end of tv


##################################################
# wileyfox
##################################################
$1=="wileyfox"{
  exit
} ## end of wileyfox


